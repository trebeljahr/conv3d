diff --git a/node_modules/gltfjsx/src/gltfjsx.js b/node_modules/gltfjsx/src/gltfjsx.js
index ee8b974..c71b43e 100755
--- a/node_modules/gltfjsx/src/gltfjsx.js
+++ b/node_modules/gltfjsx/src/gltfjsx.js
@@ -67,12 +67,13 @@ export default function (file, output, options) {
         '',
         async (gltf) => {
           const output = await parse(gltf, { fileName: filePath, size, ...options })
-          if (options.console) console.log(output)
-          else stream?.write(output)
+          stream?.write(output)
+
           stream?.end()
           resolve()
         },
-        (reason) => console.log(reason)
+        (reason) => {
+        }
       )
     }
 
diff --git a/node_modules/gltfjsx/src/utils/parser.js b/node_modules/gltfjsx/src/utils/parser.js
index 4fc66f3..d00c0fb 100644
--- a/node_modules/gltfjsx/src/utils/parser.js
+++ b/node_modules/gltfjsx/src/utils/parser.js
@@ -450,11 +450,8 @@ function parse(gltf, { fileName = 'model', ...options } = {}) {
   } catch (e) {
     console.log('Error while parsing glTF', e)
   }
-  const header = `/*
-${options.header ? options.header : 'Auto-generated by: https://github.com/pmndrs/gltfjsx'} ${
-    options.size ? `\nFiles: ${options.size}` : ''
-  }
-${parseExtras(gltf.parser.json.asset && gltf.parser.json.asset.extras)}*/`
+
+  const header = ""
   const hasPrimitives = scene.includes('<primitive')
   const result = `${options.types ? `\nimport * as THREE from 'three'` : ''}
         import React from 'react'${hasPrimitives ? '\nimport { useGraph } from "@react-three/fiber"' : ''}
@@ -522,7 +519,6 @@ ${parseExtras(gltf.parser.json.asset && gltf.parser.json.asset.extras)}*/`
 
 useGLTF.preload('${url}')`
 
-  if (!options.console) console.log(header)
   const output = header + '\n' + result
   const formatted = prettier.format(output, {
     semi: false,
